{"categories":[{"name":"闲聊","count":7},{"name":"初瘦酒馆","count":6},{"name":"技术","count":2}],"posts":[{"excrept":"<p>相信 Hexo、Ghost、WordPress 等常见的开源内容框架对于很多人来说都不陌生。</p>\n<p><img src=\"https://user-images.githubusercontent.com/1890238/50014695-98cb3e00-ffff-11e8-822e-df2717b27f82.png\" alt=\"1\"></p>\n<p>看到这张简单的示意图，应该能够发现，传统的网站生成有两种方式：</p>\n<ul>\n<li>一种是类似于 Hexo，纯静态的，通过 markdown 编辑文章内容，然后执行命令生成静态网站；</li>\n<li>另一种是类似于 Ghost，纯动态的，通过管理后台编辑文章（存入数据库，如 MySQL），然后通过渲染器进行渲染，网站内容为动态的，需要在服务器上跑一个服务（程序）。</li>\n</ul>\n<p>而 WordPress（PHP）之类的框架有一些天然的优势，就是能够很方便地生成出静态页面作为缓存。</p>\n<p>当然，这样的方式建站，如企业的官网，显然是很不现代。因此，Node.js SSR（服务器端渲染）登上了历史舞台。然而服务器端渲染的性能瓶颈至今未有一个很好的解决方案（我们现在前端流行的框架基本上都会使用虚拟 Dom 或类似的方案，遍历虚拟 Dom 相较于模板渲染性能相差不是一个数量级）。</p>\n","wordcount":1174,"tags":["创意","nuxt","前端"],"category":["技术"],"title":"Nuxtpress - Node.js 动态网站静态化之路","date":"2018-12-13T04:33:50.000Z","slug":"nuxtpress"},{"excrept":"<p>不能免俗。</p>\n<p>第一篇文章依然是 “Hello World！”作为技术人的标配，前前后后N个博客也都是以此作为序章。</p>\n<h2 id=\"简单介绍一下\"><a class=\"header-anchor\" href=\"#简单介绍一下\">#</a> 简单介绍一下</h2>\n<p>早就想在微信上倒腾一下了，之前有过一个500粉左右的订阅号“创意工场”，因为几年没有登录未通过实名认证被屏蔽了。</p>\n<p>注销了之后就重新注册了这个微信公众号，搜索<code>初瘦</code>或者<code>assholev0</code>，或者通过扫描下面的二维码可以订阅。</p>\n<p><img src=\"https://user-images.githubusercontent.com/1890238/45592199-93773c80-b999-11e8-84ab-fa807929238c.png\" alt=\"assholev0\"></p>\n","wordcount":1095,"tags":["vue","vuepress","前端"],"category":["技术"],"title":"开篇：你好，世界！","date":"2018-09-16T11:47:42.000Z","slug":"hello-world"}]}